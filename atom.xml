<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://unknowncabbage.github.io/atom.xml" rel="self"/>
  
  <link href="http://unknowncabbage.github.io/"/>
  <updated>2022-05-13T18:50:05.575Z</updated>
  <id>http://unknowncabbage.github.io/</id>
  
  <author>
    <name>不知名小白菜</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JS面试题集合</title>
    <link href="http://unknowncabbage.github.io/2022/05/14/Face/"/>
    <id>http://unknowncabbage.github.io/2022/05/14/Face/</id>
    <published>2022-05-13T17:40:15.000Z</published>
    <updated>2022-05-13T18:50:05.575Z</updated>
    
    <content type="html"><![CDATA[<h2 id="闲了很久，来看看JS面试题"><a href="#闲了很久，来看看JS面试题" class="headerlink" title="闲了很久，来看看JS面试题"></a><strong>闲了很久，来看看JS面试题</strong></h2><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimgo.liulanqi.net%2Fimg2021%2F8%2F3%2F16%2F2021080306162527.jpg&refer=http%3A%2F%2Fimgo.liulanqi.net&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1655055719&t=b021a867f2d422ae5975c3348e8b8aae" alt="img"></p><h4 id="涩涩狗子镇楼！"><a href="#涩涩狗子镇楼！" class="headerlink" title="涩涩狗子镇楼！"></a>涩涩狗子镇楼！</h4><h3 id="1：延迟加载JS的方式？"><a href="#1：延迟加载JS的方式？" class="headerlink" title="1：延迟加载JS的方式？"></a>1：延迟加载JS的方式？</h3><p>async 与 defer</p><p>async 是解析与渲染DOM结构同时进行</p><p>defer虽然也是解析script脚本与渲染DOM同时进行，但是会等待DOM结构渲染完成以后再去加载script</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script defer src=&quot;../&quot;&gt;&lt;script&gt;</span><br><span class="line">&lt;script async src=&quot;../&quot;&gt;&lt;script&gt;</span><br></pre></td></tr></table></figure><h3 id="2：数据类型"><a href="#2：数据类型" class="headerlink" title="2：数据类型**"></a>2：数据类型**</h3><p>javascript数据类型分为基本类型与引用类型两大类</p><p>基本类型：string，number，boolean，null，undefined，symbol，bigInt(存在争论，有些人认为不应该)</p><p>引用类型：object（object是一个大类，包含对象，数组，函数等引用类型）</p><h3 id="3：null和undefined的区别"><a href="#3：null和undefined的区别" class="headerlink" title="3：null和undefined的区别"></a><strong>3：null和undefined的区别</strong></h3><p>最初javascript木有undefined类型，是作者沟洫添加的，他本人认为不能将一切表示为无的值都设置为null，可以将无的基本类型设置为undefined</p><h3 id="4：-x3D-x3D-与-x3D-x3D-x3D-的区别"><a href="#4：-x3D-x3D-与-x3D-x3D-x3D-的区别" class="headerlink" title="4：&#x3D;&#x3D; 与 &#x3D;&#x3D;&#x3D; 的区别"></a><strong>4：&#x3D;&#x3D; 与 &#x3D;&#x3D;&#x3D; 的区别</strong></h3><p>&#x3D;&#x3D; 在数据比较时，会隐式转换（调用valueof进行转换对比）,只比较值不比较类型</p><p>而&#x3D;&#x3D;&#x3D;比较类型也比较值 必须到完全的相同，因此在项目中比较两个值应该采用&#x3D;&#x3D;&#x3D;的方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let a = 2</span><br><span class="line">if（a == &#x27;2&#x27;）&#123;</span><br><span class="line">    console.log(&#x27; a = &#x27;2&#x27; &#x27;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5：微任务和宏任务"><a href="#5：微任务和宏任务" class="headerlink" title="5：微任务和宏任务"></a>5：微任务和宏任务</h3><p>script脚本中包含同步与异步逻辑，页面会首先执行同步代码，再执行异步代码</p><p>而异步代码又区分为微任务和宏任务，与事件循环机制相关</p><p>在执行宏任务之前，会查看页面有没有未执行的微任务，先清空页面微任务再执行宏任务</p><p>微任务：Promise.then</p><p>宏任务：定时器，事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;123&#x27;)</span><br><span class="line">&#125;,2000)</span><br><span class="line"></span><br><span class="line">new Promise((resolve,reject)=&gt;&#123;</span><br><span class="line">console.log(&#x27;promise&#x27;)</span><br><span class="line">    resolve()</span><br><span class="line">&#125;).then(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;then1&#x27;)</span><br><span class="line">    resolve()</span><br><span class="line">&#125;).then(()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;then2&#x27;)</span><br><span class="line">    resolve()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">console.log(&#x27;同步&#x27;)</span><br><span class="line"></span><br><span class="line">result: &#x27;promise&#x27; &#x27;同步&#x27; &#x27;then1&#x27; &#x27;then2&#x27; &#x27;123&#x27;</span><br></pre></td></tr></table></figure><h3 id="6：作用域"><a href="#6：作用域" class="headerlink" title="6：作用域"></a>6<strong>：作用域</strong></h3><h3 id="7：对象"><a href="#7：对象" class="headerlink" title="7：对象"></a><strong>7：对象</strong></h3><h3 id="8：作用域-this指向-原型"><a href="#8：作用域-this指向-原型" class="headerlink" title="8：作用域  + this指向 + 原型"></a>8：作用域  + this指向 + 原型</h3><h3 id="9：判断数组方法"><a href="#9：判断数组方法" class="headerlink" title="9：判断数组方法"></a>9：判断数组方法</h3><h3 id="10：slice与splice"><a href="#10：slice与splice" class="headerlink" title="10：slice与splice"></a>10：slice与splice</h3><h3 id="11：多维数组最大值"><a href="#11：多维数组最大值" class="headerlink" title="11：多维数组最大值"></a>11：多维数组最大值</h3><h3 id="12：字符串新增方法"><a href="#12：字符串新增方法" class="headerlink" title="12：字符串新增方法"></a>12：字符串新增方法</h3><h3 id="13：找出字符串出现最多次数字符和次数"><a href="#13：找出字符串出现最多次数字符和次数" class="headerlink" title="13：找出字符串出现最多次数字符和次数"></a>13：找出字符串出现最多次数字符和次数</h3><h3 id="14：new操作符"><a href="#14：new操作符" class="headerlink" title="14：new操作符"></a>14：new操作符</h3><h3 id="15：闭包"><a href="#15：闭包" class="headerlink" title="15：闭包"></a>15：闭包</h3><h3 id="16：原型链"><a href="#16：原型链" class="headerlink" title="16：原型链"></a>16：原型链</h3><h3 id="17：js继承方式"><a href="#17：js继承方式" class="headerlink" title="17：js继承方式"></a>17：js继承方式</h3><h3 id="18：call，apply，bind区别"><a href="#18：call，apply，bind区别" class="headerlink" title="18：call，apply，bind区别"></a>18：call，apply，bind区别</h3><h3 id="19：sort背后原理"><a href="#19：sort背后原理" class="headerlink" title="19：sort背后原理"></a>19：sort背后原理</h3><h3 id="20：深拷贝与浅拷贝"><a href="#20：深拷贝与浅拷贝" class="headerlink" title="20：深拷贝与浅拷贝"></a>20：深拷贝与浅拷贝</h3><h3 id="21：本次存储localStorage-x2F-sessionStorage与cookie区别"><a href="#21：本次存储localStorage-x2F-sessionStorage与cookie区别" class="headerlink" title="21：本次存储localStorage&#x2F;sessionStorage与cookie区别"></a>21：本次存储localStorage&#x2F;sessionStorage与cookie区别</h3><p>未完待续……</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;闲了很久，来看看JS面试题&quot;&gt;&lt;a href=&quot;#闲了很久，来看看JS面试题&quot; class=&quot;headerlink&quot; title=&quot;闲了很久，来看看JS面试题&quot;&gt;&lt;/a&gt;&lt;strong&gt;闲了很久，来看看JS面试题&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src=</summary>
      
    
    
    
    <category term="面试" scheme="http://unknowncabbage.github.io/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
    <category term="面试题" scheme="http://unknowncabbage.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>HaoUI第二次尝试</title>
    <link href="http://unknowncabbage.github.io/2022/05/13/HaoUI2/"/>
    <id>http://unknowncabbage.github.io/2022/05/13/HaoUI2/</id>
    <published>2022-05-13T04:08:17.000Z</published>
    <updated>2022-05-13T06:16:36.669Z</updated>
    
    <content type="html"><![CDATA[<p>之前完成了h-icon与h-button的封装，今天来尝试一下完成HaoUI其他组件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前完成了h-icon与h-button的封装，今天来尝试一下完成HaoUI其他组件&lt;/p&gt;
</summary>
      
    
    
    
    <category term="HaoUI" scheme="http://unknowncabbage.github.io/categories/HaoUI/"/>
    
    
    <category term="个人组件库" scheme="http://unknowncabbage.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%BB%84%E4%BB%B6%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>HaoUI开始</title>
    <link href="http://unknowncabbage.github.io/2022/05/13/HaoUI1/"/>
    <id>http://unknowncabbage.github.io/2022/05/13/HaoUI1/</id>
    <published>2022-05-12T17:45:55.000Z</published>
    <updated>2022-05-13T04:13:48.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HaoUI-h-icon-与-h-button"><a href="#HaoUI-h-icon-与-h-button" class="headerlink" title="HaoUI  h-icon 与 h-button"></a><strong>HaoUI  h-icon 与 h-button</strong></h2><p>h-icon 图标组件</p><p>h-button按钮组件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;HaoUI-h-icon-与-h-button&quot;&gt;&lt;a href=&quot;#HaoUI-h-icon-与-h-button&quot; class=&quot;headerlink&quot; title=&quot;HaoUI  h-icon 与 h-button&quot;&gt;&lt;/a&gt;&lt;strong&gt;HaoUI  h</summary>
      
    
    
    
    <category term="HaoUI" scheme="http://unknowncabbage.github.io/categories/HaoUI/"/>
    
    
    <category term="个人组件库" scheme="http://unknowncabbage.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%BB%84%E4%BB%B6%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>邂逅Node</title>
    <link href="http://unknowncabbage.github.io/2022/05/13/Node1/"/>
    <id>http://unknowncabbage.github.io/2022/05/13/Node1/</id>
    <published>2022-05-12T17:20:29.000Z</published>
    <updated>2022-05-13T04:11:27.454Z</updated>
    
    <content type="html"><![CDATA[<p>邂逅Node</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;邂逅Node&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Node" scheme="http://unknowncabbage.github.io/categories/Node/"/>
    
    
    <category term="Node学习" scheme="http://unknowncabbage.github.io/tags/Node%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
